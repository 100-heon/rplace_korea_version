{"ast":null,"code":"var _jsxFileName = \"/Users/100_heon/Desktop/Rspace/rplace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { SketchPicker } from 'react-color';\nimport Draggable from 'react-draggable';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [currentColor, setCurrentColor] = useState(\"#000000\");\n  const [selectedPixel, setSelectedPixel] = useState(null);\n  const [showPicker, setShowPicker] = useState(false);\n  const [pickerPosition, setPickerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [tempBoard, setTempBoard] = useState([]);\n  const [pickerKey, setPickerKey] = useState(0); // 팔레트 위치를 강제로 업데이트하기 위한 상태\n\n  useEffect(() => {\n    // 초기 보드 설정 (50 x 50)\n    const initialBoard = Array(50).fill().map(() => Array(70).fill(\"#FFFFFF\"));\n    setBoard(initialBoard);\n    setTempBoard(initialBoard);\n    socket.on('initial_board', board => {\n      setBoard(board);\n      setTempBoard(board);\n    });\n    socket.on('change_color', data => {\n      setBoard(prevBoard => {\n        const {\n          x,\n          y,\n          color\n        } = data;\n        const newBoard = [...prevBoard];\n        newBoard[y][x] = color;\n        return newBoard;\n      });\n      setTempBoard(prevBoard => {\n        const {\n          x,\n          y,\n          color\n        } = data;\n        const newBoard = [...prevBoard];\n        newBoard[y][x] = color;\n        return newBoard;\n      });\n    });\n  }, []);\n  const handlePixelClick = (x, y, event) => {\n    // 현재 팔레트가 열려있는 상태에서도 새로운 픽셀 클릭을 허용\n    if (showPicker) {\n      cancelColorChange(); // 기존 선택 상태 초기화\n    }\n    setSelectedPixel({\n      x,\n      y\n    });\n    setShowPicker(true);\n\n    // 팔레트 위치를 픽셀 위치에서 약간 떨어진 곳으로 설정\n    setPickerPosition({\n      x: event.clientX + 20,\n      y: event.clientY + 20\n    });\n    setPickerKey(prevKey => prevKey + 1); // 새로운 키 값 설정\n  };\n  const handleColorChange = color => {\n    setCurrentColor(color.hex);\n    if (selectedPixel) {\n      const {\n        x,\n        y\n      } = selectedPixel;\n      setTempBoard(prevBoard => {\n        const newBoard = prevBoard.map(row => [...row]);\n        newBoard[y][x] = color.hex;\n        return newBoard;\n      });\n    }\n  };\n  const confirmColorChange = () => {\n    if (selectedPixel) {\n      const {\n        x,\n        y\n      } = selectedPixel;\n      socket.emit('change_color', {\n        x,\n        y,\n        color: currentColor\n      });\n      setSelectedPixel(null);\n      setShowPicker(false);\n    }\n  };\n  const cancelColorChange = () => {\n    setSelectedPixel(null);\n    setShowPicker(false);\n    setTempBoard(board); // 원래 보드 상태로 되돌리기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD53D\\uC140\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC0C9\\uC0C1 \\uC120\\uD0DD\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), showPicker && /*#__PURE__*/_jsxDEV(Draggable, {\n      defaultPosition: pickerPosition,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-container\",\n        style: {\n          position: 'absolute',\n          zIndex: 1000,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SketchPicker, {\n          color: currentColor,\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmColorChange,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelColorChange,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, pickerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixel-board\",\n        children: tempBoard.map((row, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: row.map((color, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => handlePixelClick(x, y, e),\n            className: \"pixel\",\n            style: {\n              backgroundColor: color,\n              border: selectedPixel && selectedPixel.x === x && selectedPixel.y === y ? '2px solid red' : '1px solid black'\n            }\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this))\n        }, y, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gCpLPpBPAASRSq5dN03btoHiTWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","SketchPicker","Draggable","jsxDEV","_jsxDEV","socket","App","_s","board","setBoard","currentColor","setCurrentColor","selectedPixel","setSelectedPixel","showPicker","setShowPicker","pickerPosition","setPickerPosition","x","y","tempBoard","setTempBoard","pickerKey","setPickerKey","initialBoard","Array","fill","map","on","data","prevBoard","color","newBoard","handlePixelClick","event","cancelColorChange","clientX","clientY","prevKey","handleColorChange","hex","row","confirmColorChange","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultPosition","style","position","zIndex","background","padding","borderRadius","boxShadow","onChange","marginTop","textAlign","onClick","marginRight","display","e","backgroundColor","border","_c","$RefreshReg$"],"sources":["/Users/100_heon/Desktop/Rspace/rplace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { SketchPicker } from 'react-color';\nimport Draggable from 'react-draggable';\nimport './App.css';\n\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n    const [board, setBoard] = useState([]);\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\n    const [selectedPixel, setSelectedPixel] = useState(null);\n    const [showPicker, setShowPicker] = useState(false);\n    const [pickerPosition, setPickerPosition] = useState({ x: 0, y: 0 });\n    const [tempBoard, setTempBoard] = useState([]);\n    const [pickerKey, setPickerKey] = useState(0); // 팔레트 위치를 강제로 업데이트하기 위한 상태\n\n    useEffect(() => {\n        // 초기 보드 설정 (50 x 50)\n        const initialBoard = Array(50).fill().map(() => Array(70).fill(\"#FFFFFF\"));\n        setBoard(initialBoard);\n        setTempBoard(initialBoard);\n\n        socket.on('initial_board', board => {\n            setBoard(board);\n            setTempBoard(board);\n        });\n\n        socket.on('change_color', data => {\n            setBoard(prevBoard => {\n                const { x, y, color } = data;\n                const newBoard = [...prevBoard];\n                newBoard[y][x] = color;\n                return newBoard;\n            });\n            setTempBoard(prevBoard => {\n                const { x, y, color } = data;\n                const newBoard = [...prevBoard];\n                newBoard[y][x] = color;\n                return newBoard;\n            });\n        });\n\n    }, []);\n\n    const handlePixelClick = (x, y, event) => {\n        // 현재 팔레트가 열려있는 상태에서도 새로운 픽셀 클릭을 허용\n        if (showPicker) {\n            cancelColorChange(); // 기존 선택 상태 초기화\n        }\n\n        setSelectedPixel({ x, y });\n        setShowPicker(true);\n\n        // 팔레트 위치를 픽셀 위치에서 약간 떨어진 곳으로 설정\n        setPickerPosition({ x: event.clientX + 20, y: event.clientY + 20 });\n        setPickerKey(prevKey => prevKey + 1); // 새로운 키 값 설정\n    };\n\n    const handleColorChange = (color) => {\n        setCurrentColor(color.hex);\n        if (selectedPixel) {\n            const { x, y } = selectedPixel;\n            setTempBoard(prevBoard => {\n                const newBoard = prevBoard.map(row => [...row]);\n                newBoard[y][x] = color.hex;\n                return newBoard;\n            });\n        }\n    };\n\n    const confirmColorChange = () => {\n        if (selectedPixel) {\n            const { x, y } = selectedPixel;\n            socket.emit('change_color', { x, y, color: currentColor });\n            setSelectedPixel(null);\n            setShowPicker(false);\n        }\n    };\n\n    const cancelColorChange = () => {\n        setSelectedPixel(null);\n        setShowPicker(false);\n        setTempBoard(board); // 원래 보드 상태로 되돌리기\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>픽셀을 클릭하여 색상 선택하기</h1>\n            {showPicker && (\n                <Draggable key={pickerKey} defaultPosition={pickerPosition}>\n                    <div className=\"picker-container\" style={{ position: 'absolute', zIndex: 1000, background: '#fff', padding: '10px', borderRadius: '8px', boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\n                        <SketchPicker color={currentColor} onChange={handleColorChange} />\n                        <div style={{ marginTop: '10px', textAlign: 'center' }}>\n                            <button onClick={confirmColorChange} style={{ marginRight: '10px' }}>확인</button>\n                            <button onClick={cancelColorChange}>취소</button>\n                        </div>\n                    </div>\n                </Draggable>\n            )}\n            <div className=\"board-container\">\n                <div className=\"pixel-board\">\n                    {tempBoard.map((row, y) => (\n                        <div key={y} style={{ display: 'flex' }}>\n                            {row.map((color, x) => (\n                                <div key={x} onClick={(e) => handlePixelClick(x, y, e)} \n                                    className=\"pixel\"\n                                    style={{\n                                        backgroundColor: color,\n                                        border: selectedPixel && selectedPixel.x === x && selectedPixel.y === y ? '2px solid red' : '1px solid black'\n                                    }} />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}