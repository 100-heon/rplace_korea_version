{"ast":null,"code":"var _jsxFileName = \"/Users/100_heon/Desktop/Rspace/rplace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { SketchPicker } from 'react-color';\nimport Draggable from 'react-draggable';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [currentColor, setCurrentColor] = useState(\"#000000\");\n  const [selectedPixel, setSelectedPixel] = useState(null);\n  const [showPicker, setShowPicker] = useState(false);\n  const [pickerPosition, setPickerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [tempBoard, setTempBoard] = useState([]);\n  const [pickerKey, setPickerKey] = useState(0); // 팔레트 위치를 강제로 업데이트하기 위한 상태\n\n  useEffect(() => {\n    socket.on('initial_board', board => {\n      setBoard(board);\n      setTempBoard(board);\n    });\n    socket.on('change_color', data => {\n      setBoard(prevBoard => {\n        const {\n          x,\n          y,\n          color\n        } = data;\n        const newBoard = [...prevBoard];\n        newBoard[y][x] = color;\n        return newBoard;\n      });\n      setTempBoard(prevBoard => {\n        const {\n          x,\n          y,\n          color\n        } = data;\n        const newBoard = [...prevBoard];\n        newBoard[y][x] = color;\n        return newBoard;\n      });\n    });\n  }, []);\n  const handlePixelClick = (x, y, event) => {\n    // 현재 팔레트가 열려있는 상태에서도 새로운 픽셀 클릭을 허용\n    if (showPicker) {\n      cancelColorChange(); // 기존 선택 상태 초기화\n    }\n    setSelectedPixel({\n      x,\n      y\n    });\n    setShowPicker(true);\n\n    // 팔레트 위치를 픽셀 위치에서 약간 떨어진 곳으로 설정\n    setPickerPosition({\n      x: event.clientX + 20,\n      y: event.clientY + 20\n    });\n    setPickerKey(prevKey => prevKey + 1); // 새로운 키 값 설정\n  };\n  const handleColorChange = color => {\n    setCurrentColor(color.hex);\n    if (selectedPixel) {\n      const {\n        x,\n        y\n      } = selectedPixel;\n      setTempBoard(prevBoard => {\n        const newBoard = prevBoard.map(row => [...row]);\n        newBoard[y][x] = color.hex;\n        return newBoard;\n      });\n    }\n  };\n  const confirmColorChange = () => {\n    if (selectedPixel) {\n      const {\n        x,\n        y\n      } = selectedPixel;\n      socket.emit('change_color', {\n        x,\n        y,\n        color: currentColor\n      });\n      setSelectedPixel(null);\n      setShowPicker(false);\n    }\n  };\n  const cancelColorChange = () => {\n    setSelectedPixel(null);\n    setShowPicker(false);\n    setTempBoard(board); // 원래 보드 상태로 되돌리기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD53D\\uC140\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC0C9\\uC0C1 \\uC120\\uD0DD\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), showPicker && /*#__PURE__*/_jsxDEV(Draggable, {\n      defaultPosition: pickerPosition,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-container\",\n        style: {\n          position: 'absolute',\n          zIndex: 1000,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SketchPicker, {\n          color: currentColor,\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmColorChange,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelColorChange,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, pickerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'row'\n      },\n      children: tempBoard.map((row, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: row.map((color, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handlePixelClick(x, y, e),\n          style: {\n            width: '12px',\n            height: '12px',\n            backgroundColor: color,\n            border: selectedPixel && selectedPixel.x === x && selectedPixel.y === y ? '2px solid red' : '1px solid black',\n            boxSizing: 'border-box' // border-box를 설정하여 border가 크기에 영향을 미치지 않게 함\n          }\n        }, x, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this))\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gCpLPpBPAASRSq5dN03btoHiTWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","SketchPicker","Draggable","jsxDEV","_jsxDEV","socket","App","_s","board","setBoard","currentColor","setCurrentColor","selectedPixel","setSelectedPixel","showPicker","setShowPicker","pickerPosition","setPickerPosition","x","y","tempBoard","setTempBoard","pickerKey","setPickerKey","on","data","prevBoard","color","newBoard","handlePixelClick","event","cancelColorChange","clientX","clientY","prevKey","handleColorChange","hex","map","row","confirmColorChange","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultPosition","style","position","zIndex","background","padding","borderRadius","boxShadow","onChange","marginTop","textAlign","onClick","marginRight","display","flexWrap","flexDirection","e","width","height","backgroundColor","border","boxSizing","_c","$RefreshReg$"],"sources":["/Users/100_heon/Desktop/Rspace/rplace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { SketchPicker } from 'react-color';\nimport Draggable from 'react-draggable';\nimport './App.css';\n\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n    const [board, setBoard] = useState([]);\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\n    const [selectedPixel, setSelectedPixel] = useState(null);\n    const [showPicker, setShowPicker] = useState(false);\n    const [pickerPosition, setPickerPosition] = useState({ x: 0, y: 0 });\n    const [tempBoard, setTempBoard] = useState([]);\n    const [pickerKey, setPickerKey] = useState(0); // 팔레트 위치를 강제로 업데이트하기 위한 상태\n\n    useEffect(() => {\n        socket.on('initial_board', board => {\n            setBoard(board);\n            setTempBoard(board);\n        });\n\n        socket.on('change_color', data => {\n            setBoard(prevBoard => {\n                const { x, y, color } = data;\n                const newBoard = [...prevBoard];\n                newBoard[y][x] = color;\n                return newBoard;\n            });\n            setTempBoard(prevBoard => {\n                const { x, y, color } = data;\n                const newBoard = [...prevBoard];\n                newBoard[y][x] = color;\n                return newBoard;\n            });\n        });\n\n    }, []);\n\n    const handlePixelClick = (x, y, event) => {\n        // 현재 팔레트가 열려있는 상태에서도 새로운 픽셀 클릭을 허용\n        if (showPicker) {\n            cancelColorChange(); // 기존 선택 상태 초기화\n        }\n\n        setSelectedPixel({ x, y });\n        setShowPicker(true);\n\n        // 팔레트 위치를 픽셀 위치에서 약간 떨어진 곳으로 설정\n        setPickerPosition({ x: event.clientX + 20, y: event.clientY + 20 });\n        setPickerKey(prevKey => prevKey + 1); // 새로운 키 값 설정\n    };\n\n    const handleColorChange = (color) => {\n        setCurrentColor(color.hex);\n        if (selectedPixel) {\n            const { x, y } = selectedPixel;\n            setTempBoard(prevBoard => {\n                const newBoard = prevBoard.map(row => [...row]);\n                newBoard[y][x] = color.hex;\n                return newBoard;\n            });\n        }\n    };\n\n    const confirmColorChange = () => {\n        if (selectedPixel) {\n            const { x, y } = selectedPixel;\n            socket.emit('change_color', { x, y, color: currentColor });\n            setSelectedPixel(null);\n            setShowPicker(false);\n        }\n    };\n\n    const cancelColorChange = () => {\n        setSelectedPixel(null);\n        setShowPicker(false);\n        setTempBoard(board); // 원래 보드 상태로 되돌리기\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>픽셀을 클릭하여 색상 선택하기</h1>\n            {showPicker && (\n                <Draggable key={pickerKey} defaultPosition={pickerPosition}>\n                    <div className=\"picker-container\" style={{ position: 'absolute', zIndex: 1000, background: '#fff', padding: '10px', borderRadius: '8px', boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\n                        <SketchPicker color={currentColor} onChange={handleColorChange} />\n                        <div style={{ marginTop: '10px', textAlign: 'center' }}>\n                            <button onClick={confirmColorChange} style={{ marginRight: '10px' }}>확인</button>\n                            <button onClick={cancelColorChange}>취소</button>\n                        </div>\n                    </div>\n                </Draggable>\n            )}\n            <div style={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'row' }}>\n                {tempBoard.map((row, y) => (\n                    <div key={y} style={{ display: 'flex' }}>\n                        {row.map((color, x) => (\n                            <div key={x} onClick={(e) => handlePixelClick(x, y, e)} \n                                 style={{\n                                    width: '12px',\n                                    height: '12px',\n                                    backgroundColor: color,\n                                    border: selectedPixel && selectedPixel.x === x && selectedPixel.y === y ? '2px solid red' : '1px solid black',\n                                    boxSizing: 'border-box' // border-box를 설정하여 border가 크기에 영향을 미치지 않게 함\n                                 }} />\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}