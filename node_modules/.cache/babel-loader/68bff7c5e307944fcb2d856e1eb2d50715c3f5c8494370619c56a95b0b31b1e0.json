{"ast":null,"code":"var _jsxFileName = \"/Users/100_heon/Desktop/Rspace/rplace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst totalColumns = 100; // 총 열 수\nconst totalRows = 50; // 총 행 수\n\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [scale, setScale] = useState(1);\n  useEffect(() => {\n    socket.on('initial_board', board => {\n      setBoard(board);\n    });\n    const resizeBoard = () => {\n      const boardWidth = totalColumns * 20; // 전체 보드 너비\n      const boardHeight = totalRows * 20; // 전체 보드 높이\n      const scaleX = window.innerWidth / boardWidth;\n      const scaleY = window.innerHeight / boardHeight;\n      setScale(Math.min(scaleX, scaleY)); // 너비와 높이 중 작은 비율로 조정\n    };\n    window.addEventListener('resize', resizeBoard);\n    resizeBoard();\n    return () => {\n      window.removeEventListener('resize', resizeBoard);\n    };\n  }, []);\n  const changeColor = (x, y) => {\n    const color = prompt(\"Enter a hex color code:\", \"#000000\");\n    socket.emit('change_color', {\n      x,\n      y,\n      color\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Pixel Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${totalColumns * 20}px`,\n        height: `${totalRows * 20}px`,\n        display: 'flex',\n        flexWrap: 'wrap',\n        transform: `scale(${scale})`,\n        transformOrigin: 'top left'\n      },\n      children: board.map((row, y) => row.map((color, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => changeColor(x, y),\n        style: {\n          width: '20px',\n          height: '20px',\n          backgroundColor: color,\n          border: '1px solid black'\n        }\n      }, `${y}-${x}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"i2WBBxZPZPhsR9wWPiOZDkGwbuE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","totalColumns","totalRows","App","_s","board","setBoard","scale","setScale","on","resizeBoard","boardWidth","boardHeight","scaleX","window","innerWidth","scaleY","innerHeight","Math","min","addEventListener","removeEventListener","changeColor","x","y","color","prompt","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","display","flexWrap","transform","transformOrigin","map","row","onClick","backgroundColor","border","_c","$RefreshReg$"],"sources":["/Users/100_heon/Desktop/Rspace/rplace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:4000');\nconst totalColumns = 100;  // 총 열 수\nconst totalRows = 50;      // 총 행 수\n\nfunction App() {\n    const [board, setBoard] = useState([]);\n    const [scale, setScale] = useState(1);\n\n    useEffect(() => {\n        socket.on('initial_board', board => {\n            setBoard(board);\n        });\n\n        const resizeBoard = () => {\n            const boardWidth = totalColumns * 20; // 전체 보드 너비\n            const boardHeight = totalRows * 20;   // 전체 보드 높이\n            const scaleX = window.innerWidth / boardWidth;\n            const scaleY = window.innerHeight / boardHeight;\n            setScale(Math.min(scaleX, scaleY));   // 너비와 높이 중 작은 비율로 조정\n        };\n\n        window.addEventListener('resize', resizeBoard);\n        resizeBoard();\n\n        return () => {\n            window.removeEventListener('resize', resizeBoard);\n        };\n    }, []);\n\n    const changeColor = (x, y) => {\n        const color = prompt(\"Enter a hex color code:\", \"#000000\");\n        socket.emit('change_color', { x, y, color });\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>React Pixel Board</h1>\n            <div style={{\n                width: `${totalColumns * 20}px`, \n                height: `${totalRows * 20}px`, \n                display: 'flex', \n                flexWrap: 'wrap',\n                transform: `scale(${scale})`, \n                transformOrigin: 'top left'\n            }}>\n                {board.map((row, y) => (\n                    row.map((color, x) => (\n                        <div key={`${y}-${x}`} onClick={() => changeColor(x, y)}\n                             style={{ width: '20px', height: '20px', backgroundColor: color, border: '1px solid black' }}>\n                        </div>\n                    ))\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}